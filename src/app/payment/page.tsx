'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import Header from '../components/Header';
import styles from './payment.module.css';
import LoadingSpinner from '../components/LoadingSpinner';

interface SelectedSlot {
  date: string;
  branchId: string;
  roomId: string;
  timeSlotId: string;
  price: number;
}

interface BookingData {
  fullName: string;
  phone: string;
  email: string;
  cccd: string;
  guests: string;
  notes: string;
  paymentMethod: string;
  room: string;
  location: string;
  price: number;
  selectedSlots: SelectedSlot[];
  frontIdImage?: string;
  backIdImage?: string;
}

export default function PaymentPage() {
  const router = useRouter();
  const [bookingData, setBookingData] = useState<BookingData | null>(null);
  const [timeRemaining, setTimeRemaining] = useState(288); // 4 minutes 48 seconds
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const storedData = localStorage.getItem('bookingData');
    if (storedData) {
      setBookingData(JSON.parse(storedData));
    } else {
      router.push('/');
    }
  }, [router]);

  useEffect(() => {
    const timer = setInterval(() => {
      setTimeRemaining(prev => {
        if (prev <= 0) {
          clearInterval(timer);
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const formatTime = (seconds: number) => {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    return `${minutes} ph√∫t ${remainingSeconds.toString().padStart(2, '0')} gi√¢y`;
  };

  const handleConfirmTransfer = async () => {
    if (!bookingData) return;
    
    setIsSubmitting(true);
    setError(null);
    
    try {
      // Prepare booking data for API
      const apiBookingData = {
        fullName: bookingData.fullName,
        phone: bookingData.phone,
        email: bookingData.email,
        cccd: bookingData.cccd,
        guests: parseInt(bookingData.guests),
        notes: bookingData.notes,
        paymentMethod: 'TRANSFER',
        selectedSlots: bookingData.selectedSlots,
        frontIdImageUrl: bookingData.frontIdImage,
        backIdImageUrl: bookingData.backIdImage,
      };

      // Submit to API
      const response = await fetch('/api/bookings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(apiBookingData),
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.message || 'C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω ƒë·∫∑t ph√≤ng');
      }

      // Clear booking data from localStorage
      localStorage.removeItem('bookingData');
      
      // Show success message and redirect
      alert('X√°c nh·∫≠n th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω ki·ªÉm tra v√† ph√™ duy·ªát ƒë·∫∑t ph√≤ng c·ªßa b·∫°n trong th·ªùi gian s·ªõm nh·∫•t.');
      router.push('/');
      
    } catch (err) {
      setError(err instanceof Error ? err.message : 'C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω ƒë·∫∑t ph√≤ng');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleBackToHome = () => {
    localStorage.removeItem('bookingData');
    router.push('/');
  };

  if (!bookingData) {
    return (
      <div className={styles.page}>
        <Header />
        <LoadingSpinner text="ƒêang t·∫£i th√¥ng tin ƒë·∫∑t ph√≤ng..." />
      </div>
    );
  }

  return (
    <div className={styles.page}>
      <Header />
      
      <div className={styles.container}>
        <div className={styles.successSection}>
          <div className={styles.successIcon}>
            <div className={styles.checkmark}>‚úì</div>
          </div>
          <h1 className={styles.successTitle}>ƒê·∫∑t h√†ng th√†nh c√¥ng!</h1>
          <div className={styles.timeRemaining}>
            Booking c√≥ hi·ªáu l·ª±c c√≤n {formatTime(timeRemaining)}
          </div>
        </div>

        <div className={styles.paymentSection}>
          <h2 className={styles.paymentTitle}>H∆∞·ªõng d·∫´n thanh to√°n qua chuy·ªÉn kho·∫£n ng√¢n h√†ng</h2>
          
          <div className={styles.paymentMethods}>
            <div className={styles.paymentMethod}>
              <h3 className={styles.methodTitle}>C√°ch 1: M·ªü app ng√¢n h√†ng v√† qu√©t m√£ QR</h3>
              <div className={styles.qrSection}>
                <div className={styles.qrCode}>
                  <div className={styles.qrPlaceholder}>
                    <div className={styles.qrGrid}>
                      {[...Array(100)].map((_, i) => (
                        <div key={i} className={styles.qrPixel} />
                      ))}
                    </div>
                  </div>
                  <div className={styles.qrLabels}>
                    <span className={styles.qrLabel}>napas247</span>
                    <span className={styles.qrLabel}>MB</span>
                    <span className={styles.qrLabel}>VietQR</span>
                  </div>
                  <div className={styles.qrStatus}>
                    <span className={styles.statusButton}>T·∫£i ·∫£nh QR</span>
                  </div>
                </div>
                <div className={styles.qrNote}>
                  Tr·∫°ng th√°i: Ch·ªù thanh to√°n... ‚è≥
                </div>
              </div>
            </div>

            <div className={styles.paymentMethod}>
              <h3 className={styles.methodTitle}>C√°ch 2: Chuy·ªÉn kho·∫£n th·ªß c√¥ng theo th√¥ng tin</h3>
              <div className={styles.bankInfo}>
                <div className={styles.bankLogo}>
                  <span className={styles.mbLogo}>MB</span>
                  <span className={styles.bankName}>Ng√¢n h√†ng MBBank</span>
                </div>
                <div className={styles.bankDetails}>
                  <div className={styles.bankRow}>
                    <span className={styles.bankLabel}>Ch·ªß t√†i kho·∫£n:</span>
                    <span className={styles.bankValue}>Tr·∫ßn Kim T√†i</span>
                  </div>
                  <div className={styles.bankRow}>
                    <span className={styles.bankLabel}>S·ªë TK:</span>
                    <span className={styles.bankValue}>VQRQABQSL8296</span>
                  </div>
                  <div className={styles.bankRow}>
                    <span className={styles.bankLabel}>S·ªë ti·ªÅn:</span>
                    <span className={styles.bankValue}>{bookingData.price.toLocaleString('vi-VN')}ƒë</span>
                  </div>
                  <div className={styles.bankRow}>
                    <span className={styles.bankLabel}>N·ªôi dung CK:</span>
                    <span className={styles.bankValue}>LC18504</span>
                  </div>
                </div>
                <div className={styles.bankNote}>
                  <p>L∆∞u √Ω: Vui l√≤ng ghi nguy√™n n·ªôi dung chuy·ªÉn kho·∫£n LC18504 ƒë·ªÉ h·ªá th·ªëng t·ª± ƒë·ªông x√°c nh·∫≠n thanh to√°n</p>
                </div>
              </div>
            </div>
          </div>

          <div className={styles.backButton}>
            {error && (
              <div className={styles.errorMessage}>
                {error}
              </div>
            )}
            <button 
              onClick={handleConfirmTransfer} 
              className={styles.confirmTransferBtn}
              disabled={isSubmitting}
            >
              {isSubmitting ? 'ƒêang x·ª≠ l√Ω...' : 'X√°c nh·∫≠n ƒë√£ chuy·ªÉn kho·∫£n'}
            </button>
            <button 
              onClick={handleBackToHome} 
              className={styles.cancelBtn}
              disabled={isSubmitting}
            >
              ‚Üê H·ªßy ƒë·∫∑t ph√≤ng
            </button>
          </div>
        </div>

        <div className={styles.promoSection}>
          <div className={styles.promoBanner}>
            <div className={styles.promoContent}>
              <div className={styles.promoTitle}>MI·ªÑN PH√ç</div>
              <div className={styles.promoSubtitle}>NH∆Ø·ª¢NG QUY·ªÄN HOMESTAY TO√ÄN QU·ªêC</div>
              <div className={styles.promoNote}>(CLICK ƒê·ªÇ T√åM HI·ªÇU TH√äM)</div>
            </div>
          </div>
          <div className={styles.licenseInfo}>
            T√†i tr·ª£: Li√™n h·ªá QC 0901416888
          </div>
        </div>
      </div>

      <footer className={styles.footer}>
        <div className={styles.footerContent}>
          <div className={styles.footerSection}>
            <div className={styles.footerLogo}>
              <span className={styles.logoIcon}>üè†</span>
              <span className={styles.logoText}>Minhome.vn</span>
            </div>
            <div className={styles.footerSubtext}>Homestay v√† l∆∞u tr√∫ t·∫°i Vi·ªát Nam</div>
            <div className={styles.hotline}>Hotline: 0932.820.930</div>
          </div>
          
          <div className={styles.footerSection}>
            <h3 className={styles.footerTitle}>Ch√≠nh s√°ch</h3>
            <ul className={styles.footerLinks}>
              <li>Ch√≠nh s√°ch b·∫£o m·∫≠t th√¥ng tin</li>
              <li>N·ªôi quy v√† quy ƒë·ªãnh</li>
              <li>H√¨nh th·ª©c thanh to√°n</li>
              <li>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</li>
              <li>H∆∞·ªõng d·∫´n t·ª´ Check in</li>
            </ul>
          </div>
          
          <div className={styles.footerSection}>
            <h3 className={styles.footerTitle}>H·ªó tr·ª£ thanh to√°n</h3>
            <div className={styles.paymentIcons}>
              <span className={styles.paymentIcon}>VISA</span>
              <span className={styles.paymentIcon}>üí≥</span>
              <span className={styles.paymentIcon}>ATM</span>
              <span className={styles.paymentIcon}>VNPAY</span>
              <span className={styles.paymentIcon}>üè¶</span>
              <span className={styles.paymentIcon}>momo</span>
            </div>
          </div>
        </div>
        
        <div className={styles.footerBottom}>
          <p className={styles.footerText}>
            H·ªô kinh doanh LOCAL HOME / ƒê·ªãa ch·ªâ: S·ªë B1 07, chung c∆∞ Cadif - HH1, H∆∞ng Ph√∫, Q. C√°i RƒÉng, TP. C·∫ßn Th∆° / M√£ s·ªë h·ªô kinh doanh: 
            8340126748 - 002 do Ph√≤ng T√†i Ch√≠nh - K·∫ø Ho·∫°ch Qu·∫≠n C√°i RƒÉng c·∫•p l·∫ßn ƒë·∫ßu ng√†y 13/11/2024. ƒêi·ªán tho·∫°i: 0901416888. Ch·ªß tr√°ch nhi·ªám 
            n·ªôi dung: Tr·∫ßn Kim T√†i
          </p>
        </div>
        
        <div className={styles.footerCopyright}>
          <p>¬© Copyright LocalHome 2025</p>
          <div className={styles.socialIcons}>
            <span className={styles.socialIcon}>f</span>
            <span className={styles.socialIcon}>üì±</span>
          </div>
        </div>
      </footer>
    </div>
  );
} 